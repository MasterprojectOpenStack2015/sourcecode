---
# http://docs.openstack.org/kilo/install-guide/install/apt/content/ch_nova.html
- hosts: compute
  gather_facts: True
  tasks:
  - shell: echo "I just want to gather facts for 2.2.2"

- name:  "Add the Compute service > Verify operation"
  # Note: Perform these commands on the controller node.
  hosts: controller
  roles:
    - config
  sudo: False
  gather_facts: True
  environment: "{{ config.environment.admin }}"
  tasks:

  # 1. Source the admin credentials
  # -------------------------------
  #
  # Thisis done by `environment: "{{ config.environment.admin }}"`

  - name: 1. Source the admin credentials to gain access to admin-only CLI commands
    # run with bash http://docs.ansible.com/shell_module.html
    shell: source admin-openrc.sh
    args:
      executable: /bin/bash

  # 2. List service components
  # --------------------------

  - name: 2.1.1 List service components to verify successful launch and registration of each process
    shell: nova service-list
    register: nova_list

  - name: 2.1.2 Check that nova-consoleauth, nova-scheduler, nova-cert, nova-conductor exist
    # using assertions: http://docs.ansible.com/ansible/assert_module.html
    assert:
      that: 
      - nova_list.stdout | search(item + "\s*\|\s*" + config.controller_node_hostname + "\s*\|\s*internal\s*\|\s*enabled\s*\|\s*up")
    with_items:
    - nova-consoleauth
    - nova-scheduler
    - nova-cert
    - nova-conductor

  - name: 2.2.1 List service components to verify successful launch and registration of each process
    shell: nova service-list 
    register: nova_service_list

  - name: 2.2.2 Check for nova-compute
    assert:
      that: 
      - nova_service_list.stdout | search("nova-compute\s*\|\s*" + hostvars[item].ansible_hostname + "\s*\|\s*nova\s*\|\s*enabled\s*\|\s*up")
    with_items: groups['compute']

  # 3. List API endpoints
  # ---------------------

  - name: 3.1 List API endpoints in the Identity service to verify connectivity with the Identity service
    shell: nova endpoints
    register: nova_endpoints

  - name: 3.2 Check that keystone, glance and nova have a public, internal and admin interface
    assert:
      that: 
      # check that there are exactly 3 plusses between item and admin
      - nova_endpoints.stdout | search(item + "([^\+]*\+){3}[^\+]*admin")
      - nova_endpoints.stdout | search(item + "([^\+]*\+){3}[^\+]*internal")
      - nova_endpoints.stdout | search(item + "([^\+]*\+){3}[^\+]*public")
    with_items:
    - glance
    - keystone
    - nova

  # 4. List images in the Image service catalog
  # -------------------------------------------

  - name: 4.1 List images in the Image service catalog to verify connectivity with the Image service
    shell: nova image-list
    register: nova_image_list

  - name: 4.2 Check that cirros image is present
    assert:
      that:
      - config.default_image_name in nova_image_list.stdout



